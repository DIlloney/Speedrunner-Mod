package com.dilloney.speedrunnermod.client;

import com.dilloney.speedrunnermod.option.OptionsFileManager;
import com.dilloney.speedrunnermod.option.ModOptions;
import me.shedaniel.autoconfig.annotation.Config;
import me.shedaniel.clothconfig2.api.ConfigBuilder;
import me.shedaniel.clothconfig2.api.ConfigCategory;
import me.shedaniel.clothconfig2.api.ConfigEntryBuilder;
import net.fabricmc.api.EnvType;
import net.fabricmc.api.Environment;
import net.minecraft.client.MinecraftClient;
import net.minecraft.text.TranslatableText;

@Config(name = "speedrunnermod")
@Environment(EnvType.CLIENT)
public class ConfigurationScreen {

    public static ConfigBuilder getConfigBuilder() {

        ConfigBuilder builder = ConfigBuilder.create().setParentScreen(MinecraftClient.getInstance().currentScreen).setTitle(new TranslatableText("speedrunnermod.options"));

        ModOptions currentOptions = OptionsFileManager.get();

        ConfigEntryBuilder entryBuilder = builder.entryBuilder();

        builder.setSavingRunnable(() -> {
            OptionsFileManager.set(currentOptions);
        });

        ConfigCategory speedrunnermodoptions = builder.getOrCreateCategory(new TranslatableText("speedrunnermod.options.general"));
        ConfigCategory speedrunnermodclientoptions = builder.getOrCreateCategory(new TranslatableText("speedrunnermod.options.client"));
        ConfigCategory speedrunnermodworld = builder.getOrCreateCategory(new TranslatableText("speedrunnermod.options.world"));
        ConfigCategory speedrunnermodstructures = builder.getOrCreateCategory(new TranslatableText("speedrunnermod.options.structures_config"));
        ConfigCategory speedrunnermodinfo = builder.getOrCreateCategory(new TranslatableText("speedrunnermod.info"));

        speedrunnermodoptions.addEntry(entryBuilder.startIntSlider(new TranslatableText("option.speedrunnermod.mod_difficulty"), currentOptions.modDifficulty, 1, 4).setDefaultValue(1).setMin(1).setMax(4).setTooltip(new TranslatableText("option.speedrunnermod.mod_difficulty.hover")).requireRestart().setSaveConsumer(newValue -> currentOptions.modDifficulty = newValue).build());
        speedrunnermodoptions.addEntry(entryBuilder.startBooleanToggle(new TranslatableText("option.speedrunnermod.official_speedrun_mode"), currentOptions.officialSpeedrunMode).setDefaultValue(currentOptions.officialSpeedrunMode).setTooltip(new TranslatableText("option.speedrunnermod.official_speedrun_mode.hover")).requireRestart().setSaveConsumer(newValue -> currentOptions.officialSpeedrunMode = newValue).build());
        speedrunnermodoptions.addEntry(entryBuilder.startBooleanToggle(new TranslatableText("option.speedrunnermod.make_structures_more_common"), currentOptions.makeStructuresMoreCommon).setDefaultValue(currentOptions.makeStructuresMoreCommon).setTooltip(new TranslatableText("option.speedrunnermod.make_structures_more_common.hover")).requireRestart().setSaveConsumer(newValue -> currentOptions.makeStructuresMoreCommon = newValue).build());
        speedrunnermodoptions.addEntry(entryBuilder.startBooleanToggle(new TranslatableText("option.speedrunnermod.modified_world_generation"), currentOptions.modifiedWorldGeneration).setDefaultValue(currentOptions.modifiedWorldGeneration).setTooltip(new TranslatableText("option.speedrunnermod.modified_world_generation.hover")).requireRestart().setSaveConsumer(newValue -> currentOptions.modifiedWorldGeneration = newValue).build());
        speedrunnermodoptions.addEntry(entryBuilder.startBooleanToggle(new TranslatableText("option.speedrunnermod.modified_block_hardness_values"), currentOptions.modifiedBlockHardness).setDefaultValue(currentOptions.modifiedBlockHardness).setTooltip(new TranslatableText("option.speedrunnermod.modified_block_hardness_values.hover")).setSaveConsumer(newValue -> currentOptions.modifiedBlockHardness = newValue).build());
        speedrunnermodoptions.addEntry(entryBuilder.startBooleanToggle(new TranslatableText("option.speedrunnermod.modified_loot_tables"), currentOptions.modifiedLootTables).setDefaultValue(currentOptions.modifiedLootTables).setTooltip(new TranslatableText("option.speedrunnermod.modified_loot_tables.hover")).requireRestart().setSaveConsumer(newValue -> currentOptions.modifiedLootTables = newValue).build());
        speedrunnermodoptions.addEntry(entryBuilder.startBooleanToggle(new TranslatableText("option.speedrunnermod.kill_ghast_upon_fireball"), currentOptions.killGhastUponFireball).setDefaultValue(currentOptions.killGhastUponFireball).setTooltip(new TranslatableText("option.speedrunnermod.kill_ghast_upon_fireball.hover")).setSaveConsumer(newValue -> currentOptions.killGhastUponFireball = newValue).build());
        speedrunnermodoptions.addEntry(entryBuilder.startBooleanToggle(new TranslatableText("option.speedrunnermod.doom_mode"), currentOptions.doomMode).setDefaultValue(currentOptions.doomMode).setTooltip(new TranslatableText("option.speedrunnermod.doom_mode.hover")).requireRestart().setSaveConsumer(newValue -> currentOptions.doomMode = newValue).build());
        speedrunnermodoptions.addEntry(entryBuilder.startBooleanToggle(new TranslatableText("option.speedrunnermod.icarus_mode"), currentOptions.iCarusMode).setDefaultValue(currentOptions.iCarusMode).setTooltip(new TranslatableText("option.speedrunnermod.icarus_mode.hover")).setSaveConsumer(newValue -> currentOptions.iCarusMode = newValue).build());
        speedrunnermodoptions.addEntry(entryBuilder.startBooleanToggle(new TranslatableText("option.speedrunnermod.infini_pearl_mode"), currentOptions.infiniPearlMode).setDefaultValue(currentOptions.infiniPearlMode).setTooltip(new TranslatableText("option.speedrunnermod.infini_pearl_mode.hover")).setSaveConsumer(newValue -> currentOptions.infiniPearlMode = newValue).build());
        speedrunnermodoptions.addEntry(entryBuilder.startBooleanToggle(new TranslatableText("option.speedrunnermod.manhunt_mode"), currentOptions.manhuntMode).setDefaultValue(currentOptions.manhuntMode).setTooltip(new TranslatableText("option.speedrunnermod.manhunt_mode.hover")).requireRestart().setSaveConsumer(newValue -> currentOptions.manhuntMode = newValue).build());
        speedrunnermodclientoptions.addEntry(entryBuilder.startBooleanToggle(new TranslatableText("option.speedrunnermod.fog"), currentOptions.fog).setDefaultValue(currentOptions.fog).setTooltip(new TranslatableText("option.speedrunnermod.fog.hover")).setSaveConsumer(newValue -> currentOptions.fog = newValue).build());
        speedrunnermodclientoptions.addEntry(entryBuilder.startBooleanToggle(new TranslatableText("option.speedrunnermod.custom_textures"), currentOptions.customTextures).setDefaultValue(currentOptions.customTextures).setTooltip(new TranslatableText("option.speedrunnermod.custom_textures.hover")).requireRestart().setSaveConsumer(newValue -> currentOptions.customTextures = newValue).build());
        speedrunnermodclientoptions.addEntry(entryBuilder.startBooleanToggle(new TranslatableText("option.speedrunnermod.hardness_tooltips"), currentOptions.hardnessTooltips).setDefaultValue(currentOptions.hardnessTooltips).setTooltip(new TranslatableText("option.speedrunnermod.hardness_tooltips.hover")).setSaveConsumer(newValue -> currentOptions.hardnessTooltips = newValue).build());
        speedrunnermodworld.addEntry(entryBuilder.startIntField(new TranslatableText("option.speedrunnermod.stronghold_count"), currentOptions.strongholdCount).setDefaultValue(currentOptions.strongholdCount).setMin(64).setMax(256).setTooltip(new TranslatableText("option.speedrunnermod.stronghold_count.hover")).requireRestart().setSaveConsumer(newValue -> currentOptions.strongholdCount = newValue).build());
        speedrunnermodworld.addEntry(entryBuilder.startIntField(new TranslatableText("option.speedrunnermod.stronghold.distance"), currentOptions.strongholdDistance).setDefaultValue(currentOptions.strongholdDistance).setMin(3).setMax(36).setTooltip(new TranslatableText("option.speedrunnermod.stronghold.distance.hover")).requireRestart().setSaveConsumer(newValue -> currentOptions.strongholdDistance = newValue).build());
        speedrunnermodworld.addEntry(entryBuilder.startIntSlider(new TranslatableText("option.speedrunnermod.maximum_fortress_blaze_spawners"), currentOptions.maximumFortressBlazeSpawners, 2, 4).setDefaultValue(currentOptions.maximumStrongholdPortalRooms).setMin(2).setMax(4).setTooltip(new TranslatableText("option.speedrunnermod.maximum_fortress_blaze_spawners.hover")).requireRestart().setSaveConsumer(newValue -> currentOptions.maximumFortressBlazeSpawners = newValue).build());
        speedrunnermodworld.addEntry(entryBuilder.startIntSlider(new TranslatableText("option.speedrunnermod.maximum_stronghold_portal_rooms"), currentOptions.maximumStrongholdPortalRooms, 1, 3).setDefaultValue(currentOptions.maximumStrongholdPortalRooms).setMin(1).setMax(3).setTooltip(new TranslatableText("option.speedrunnermod.maximum_stronghold_portal_rooms.hover")).requireRestart().setSaveConsumer(newValue -> currentOptions.maximumStrongholdPortalRooms = newValue).build());
        speedrunnermodworld.addEntry(entryBuilder.startIntSlider(new TranslatableText("option.speedrunnermod.maximum_stronghold_libraries"), currentOptions.maximumStrongholdLibraries, 1, 2).setDefaultValue(currentOptions.maximumStrongholdLibraries).setMin(1).setMax(2).setTooltip(new TranslatableText("option.speedrunnermod.maximum_stronghold_libraries.hover")).requireRestart().setSaveConsumer(newValue -> currentOptions.maximumStrongholdLibraries = newValue).build());
        speedrunnermodworld.addEntry(entryBuilder.startBooleanToggle(new TranslatableText("option.speedrunnermod.nether_ruined_portals"), currentOptions.netherRuinedPortals).setDefaultValue(currentOptions.netherRuinedPortals).setTooltip(new TranslatableText("option.speedrunnermod.nether_ruined_portals.hover")).requireRestart().setSaveConsumer(newValue -> currentOptions.netherRuinedPortals = newValue).build());
        speedrunnermodworld.addEntry(entryBuilder.startBooleanToggle(new TranslatableText("option.speedrunnermod.nether_portals_in_the_end"), currentOptions.netherPortalsInTheEnd).setDefaultValue(currentOptions.netherPortalsInTheEnd).setTooltip(new TranslatableText("option.speedrunnermod.nether_portals_in_the_end.hover")).setSaveConsumer(newValue -> currentOptions.netherPortalsInTheEnd = newValue).build());
        speedrunnermodstructures.addEntry(entryBuilder.startIntField(new TranslatableText("option.speedrunnermod.ruined_portal.spacing"), currentOptions.ruinedPortalSpacing).setDefaultValue(currentOptions.ruinedPortalSpacing).setMin(2).setMax(40).setTooltip(new TranslatableText("option.speedrunnermod.spacing.hover")).setTooltip(new TranslatableText("option.speedrunnermod.world.warning")).requireRestart().setSaveConsumer(newValue -> currentOptions.ruinedPortalSpacing = newValue).build());
        speedrunnermodstructures.addEntry(entryBuilder.startIntField(new TranslatableText("option.speedrunnermod.ruined_portal.separation"), currentOptions.ruinedPortalSeparation).setDefaultValue(currentOptions.ruinedPortalSeparation).setMin(2).setMax(15).setTooltip(new TranslatableText("option.speedrunnermod.separation.hover")).setTooltip(new TranslatableText("option.speedrunnermod.world.warning")).requireRestart().setSaveConsumer(newValue -> currentOptions.ruinedPortalSeparation = newValue).build());
        speedrunnermodstructures.addEntry(entryBuilder.startIntField(new TranslatableText("option.speedrunnermod.village.spacing"), currentOptions.villageSpacing).setDefaultValue(currentOptions.villageSpacing).setMin(2).setMax(32).setTooltip(new TranslatableText("option.speedrunnermod.spacing.hover")).setTooltip(new TranslatableText("option.speedrunnermod.world.warning")).requireRestart().setSaveConsumer(newValue -> currentOptions.villageSpacing = newValue).build());
        speedrunnermodstructures.addEntry(entryBuilder.startIntField(new TranslatableText("option.speedrunnermod.village.separation"), currentOptions.villageSeparation).setDefaultValue(currentOptions.villageSeparation).setMin(2).setMax(12).setTooltip(new TranslatableText("option.speedrunnermod.separation.hover")).setTooltip(new TranslatableText("option.speedrunnermod.world.warning")).requireRestart().setSaveConsumer(newValue -> currentOptions.villageSeparation = newValue).build());
        speedrunnermodstructures.addEntry(entryBuilder.startIntField(new TranslatableText("option.speedrunnermod.desert_pyramid.spacing"), currentOptions.desertPyramidSpacing).setDefaultValue(currentOptions.desertPyramidSpacing).setMin(2).setMax(32).setTooltip(new TranslatableText("option.speedrunnermod.spacing.hover")).setTooltip(new TranslatableText("option.speedrunnermod.world.warning")).requireRestart().setSaveConsumer(newValue -> currentOptions.desertPyramidSpacing = newValue).build());
        speedrunnermodstructures.addEntry(entryBuilder.startIntField(new TranslatableText("option.speedrunnermod.desert_pyramid.separation"), currentOptions.desertPyramidSeparation).setDefaultValue(currentOptions.desertPyramidSeparation).setMin(2).setMax(10).setTooltip(new TranslatableText("option.speedrunnermod.separation.hover")).setTooltip(new TranslatableText("option.speedrunnermod.world.warning")).requireRestart().setSaveConsumer(newValue -> currentOptions.desertPyramidSeparation = newValue).build());
        speedrunnermodstructures.addEntry(entryBuilder.startIntField(new TranslatableText("option.speedrunnermod.shipwreck.spacing"), currentOptions.shipwreckSpacing).setDefaultValue(currentOptions.shipwreckSpacing).setMin(2).setMax(24).setTooltip(new TranslatableText("option.speedrunnermod.spacing.hover")).setTooltip(new TranslatableText("option.speedrunnermod.world.warning")).requireRestart().setSaveConsumer(newValue -> currentOptions.shipwreckSpacing = newValue).build());
        speedrunnermodstructures.addEntry(entryBuilder.startIntField(new TranslatableText("option.speedrunnermod.shipwreck.separation"), currentOptions.shipwreckSeparation).setDefaultValue(currentOptions.shipwreckSeparation).setMin(2).setMax(10).setTooltip(new TranslatableText("option.speedrunnermod.separation.hover")).setTooltip(new TranslatableText("option.speedrunnermod.world.warning")).requireRestart().setSaveConsumer(newValue -> currentOptions.shipwreckSeparation = newValue).build());
        speedrunnermodstructures.addEntry(entryBuilder.startIntField(new TranslatableText("option.speedrunnermod.fortress.spacing"), currentOptions.fortressSpacing).setDefaultValue(currentOptions.fortressSpacing).setMin(2).setMax(27).setTooltip(new TranslatableText("option.speedrunnermod.spacing.hover")).setTooltip(new TranslatableText("option.speedrunnermod.world.warning")).requireRestart().setSaveConsumer(newValue -> currentOptions.fortressSpacing = newValue).build());
        speedrunnermodstructures.addEntry(entryBuilder.startIntField(new TranslatableText("option.speedrunnermod.fortress.separation"), currentOptions.fortressSeparation).setDefaultValue(currentOptions.fortressSeparation).setMin(2).setMax(10).setTooltip(new TranslatableText("option.speedrunnermod.separation.hover")).setTooltip(new TranslatableText("option.speedrunnermod.world.warning")).requireRestart().setSaveConsumer(newValue -> currentOptions.fortressSeparation = newValue).build());
        speedrunnermodstructures.addEntry(entryBuilder.startIntField(new TranslatableText("option.speedrunnermod.bastion.spacing"), currentOptions.bastionSpacing).setDefaultValue(currentOptions.bastionSpacing).setMin(2).setMax(27).setTooltip(new TranslatableText("option.speedrunnermod.spacing.hover")).setTooltip(new TranslatableText("option.speedrunnermod.world.warning")).requireRestart().setSaveConsumer(newValue -> currentOptions.bastionSpacing = newValue).build());
        speedrunnermodstructures.addEntry(entryBuilder.startIntField(new TranslatableText("option.speedrunnermod.bastion.separation"), currentOptions.bastionSeparation).setDefaultValue(currentOptions.bastionSeparation).setMin(2).setMax(10).setTooltip(new TranslatableText("option.speedrunnermod.separation.hover")).setTooltip(new TranslatableText("option.speedrunnermod.world.warning")).requireRestart().setSaveConsumer(newValue -> currentOptions.bastionSeparation = newValue).build());
        speedrunnermodstructures.addEntry(entryBuilder.startIntField(new TranslatableText("option.speedrunnermod.end_city.spacing"), currentOptions.endCitySpacing).setDefaultValue(currentOptions.endCitySpacing).setMin(2).setMax(20).setTooltip(new TranslatableText("option.speedrunnermod.spacing.hover")).setTooltip(new TranslatableText("option.speedrunnermod.world.warning")).requireRestart().setSaveConsumer(newValue -> currentOptions.endCitySpacing = newValue).build());
        speedrunnermodstructures.addEntry(entryBuilder.startIntField(new TranslatableText("option.speedrunnermod.end_city.separation"), currentOptions.endCitySeparation).setDefaultValue(currentOptions.endCitySeparation).setMin(2).setMax(11).setTooltip(new TranslatableText("option.speedrunnermod.separation.hover")).setTooltip(new TranslatableText("option.speedrunnermod.world.warning")).requireRestart().setSaveConsumer(newValue -> currentOptions.endCitySeparation = newValue).build());
        speedrunnermodinfo.addEntry(entryBuilder.startTextField(new TranslatableText("info.speedrunnermod.mod_version"), "v1.3.0 (August 5th, 2021)").build());
        speedrunnermodinfo.addEntry(entryBuilder.startTextField(new TranslatableText("info.speedrunnermod.wiki"), "https://sites.google.com/view/speedrunnermod/home").build());
        speedrunnermodinfo.addEntry(entryBuilder.startTextField(new TranslatableText("info.speedrunnermod.discord"), "https://discord.gg/Qu8utnCwkq").build());
        speedrunnermodinfo.addEntry(entryBuilder.startTextField(new TranslatableText("info.speedrunnermod.curseforge"), "https://www.curseforge.com/minecraft/mc-mods/speedrunner-mod").build());
        speedrunnermodinfo.addEntry(entryBuilder.startTextField(new TranslatableText("info.speedrunnermod.youtube"), "https://www.youtube.com/channel/UCNZVI8pFpzn-eXEZsyDEagg").build());
        return builder;
    }
}
